@page "/"

@using Microsoft.AspNetCore.SignalR.Client
@using BlazorChatServerless.Shared.Models
@using BlazorChatServerless.Shared.Constants

@if (_hubConnection != null)
{
    <h1>@_hubConnection.State</h1>
}

<div class="form-group">
    <label>
        User:
        <input @bind="_userInput" />
    </label>
</div>
<div class="form-group">
    <label>
        Message:
        <input @bind="_messageInput" size="50" />
    </label>
</div>
<button @onclick="SendAsync" disabled="@(!IsConnected)">Send</button>

<ul id="messagesList">
    @foreach (var message in _messages)
    {
        <li>@message.Name: @message.Message</li>
    }
</ul>

@code {
    private HubConnection? _hubConnection;
    private readonly HttpClient _httpClient = new();
    private readonly List<ClientMessage> _messages = new();
    private string? _userInput;
    private string? _messageInput;

    //private const string FunctionApiBaseUri = "http://localhost:7253/api/";
    private const string FunctionApiBaseUri = "https://blazorchatserverlessapi.azurewebsites.net/api/";

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(FunctionApiBaseUri)
            .Build();

        _hubConnection.On<ClientMessage>(HubConstants.ReceiveMessageMethod, clientMessage =>
        {
            _messages.Add(clientMessage);
            StateHasChanged();
        });

        await _hubConnection.StartAsync();
    }

    async Task SendAsync() {
        var msg = new ClientMessage
        {
            Name = _userInput,
            Message = _messageInput
        };

        await _httpClient.PostAsJsonAsync($"{FunctionApiBaseUri}messages", msg);
        _messageInput = string.Empty;
    }

    public bool IsConnected => _hubConnection is { State: HubConnectionState.Connected };
}